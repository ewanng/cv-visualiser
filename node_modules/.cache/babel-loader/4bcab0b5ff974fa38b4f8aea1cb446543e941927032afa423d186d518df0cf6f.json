{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      datePicked: \"\",\n      formattedCv: [],\n      currentList: [],\n      voltageList: [],\n      selected: \"Placeholder\",\n      activeDevices: [],\n      cvReading: [],\n      chartOptions: {\n        stroke: {\n          curve: \"smooth\",\n          width: \"1\"\n        },\n        chart: {\n          id: \"vuechart-example\"\n        },\n        xaxis: {\n          tickAmount: 7\n        }\n      },\n      series: [{\n        name: \"cv-data\",\n        data: this.formatCV()\n      }, {\n        name: \"cv-data2\",\n        data: this.formatCV2()\n      }]\n    };\n  },\n  mounted() {\n    let lookUpUrlActiveDevices = \"https://z4gvpjhmk4.execute-api.eu-west-2.amazonaws.com/DEV/visualiser\";\n    let lookUpHeadersActiveDevices = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-api-key\": \"WEqEfodYfW3cSpQ99TGlD3pJFCbB0KAG6byvLEpm\"\n      }\n    };\n    let lookUpRequestActiveDevices = {\n      RequestType: \"ActiveDevices\",\n      DataDict: [{\n        DeviceID: \"\",\n        ReadingDate: \"\"\n      }]\n    };\n    console.log(lookUpRequestActiveDevices);\n    axios.post(lookUpUrlActiveDevices, lookUpRequestActiveDevices, lookUpHeadersActiveDevices).then(response => {\n      this.activeDevices = [{\n        text: \"Please select a Device ID\",\n        value: \"Placeholder\"\n      }];\n      console.log(response);\n      for (let i = 0; i < response.data.Values.length; i++) {\n        this.activeDevices.push({\n          text: response.data.Values[i],\n          value: response.data.Values[i]\n        });\n      }\n    });\n  },\n  methods: {\n    loadCVReadings(device) {\n      let lookUpUrlCVReadings = \"https://z4gvpjhmk4.execute-api.eu-west-2.amazonaws.com/DEV/visualiser\";\n      let lookUpHeadersCVReadings = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-api-key\": \"WEqEfodYfW3cSpQ99TGlD3pJFCbB0KAG6byvLEpm\"\n        }\n      };\n      let lookUpRequestCVReadings = {\n        RequestType: \"LoadCVReadings\",\n        DataDict: [{\n          DeviceID: device,\n          ReadingDate: \"2023-04-18\"\n        }]\n      };\n      console.log(lookUpRequestCVReadings);\n      axios.post(lookUpUrlCVReadings, lookUpRequestCVReadings, lookUpHeadersCVReadings).then(response => {\n        console.log(response);\n        this.cvReading = response.data.Values;\n      });\n    },\n    formatCV() {\n      console.log(\"In formatter\");\n      this.voltageList = [0.186, 0.5784, 0.9713, 1.457, 1.7114, 1.3184, 0.74, 0.261, -0.139, -0.7039, -1.1968, -1.5897, -1.9749, -1.8464, -1.447, -0.8821, -0.3897, 0.1753, 0.6683, 1.062, 1.4552, 1.7784, 1.4902, 1.0107, 0.4312, 0.0383, -0.4413, -1.0207, -1.4139, -1.8074, -1.9944, -1.6222, -1.1433, -0.5641, -0.1707, 0.4935, 0.8866, 1.2801, 1.6804, 1.6655, 1.2722, 0.6062, 0.2127, -0.1808, -0.846, -1.2397, -1.6393, -1.9957, -1.7968, -1.4032, -0.7384, -0.3449, 0.2343, 0.7138, 1.1143, 1.5077, 1.7701, 1.4446, 0.951];\n      this.currentList = [0.000132378141, 0.000181730747, 0.000226203124, 0.000342571576, 0.000339571635, 3.1642119e-5, -0.000128792802, -0.000184283654, -0.000241221627, -0.000305883209, -0.00036611557, -0.000450539589, -0.000576182206, -0.000357826551, -6.2791506e-5, 0.000132739266, 0.000232501348, 0.000335686843, 0.000422143936, 0.000430436929, 0.000440641244, 0.000483373801, 0.000157042344, -6.7921917e-5, -0.000169610381, -0.000218316118, -0.000284244657, -0.000342094898, -0.000396029154, -0.00048948129, -0.000483620167, -0.000154491266, 6.6577156e-5, 0.000206048091, 0.000269123872, 0.00039712588, 0.000432213147, 0.000432670116, 0.000488873323, 0.000315097968, 1.9403299e-5, -0.000148762703, -0.000194740136, -0.00025053672, -0.000326573849, -0.00036756595, -0.000442560514, -0.000534200668, -0.000279621283, -2.2435188e-5, 0.000175065637, 0.000241377036, 0.000346403678, 0.000419243177, 0.000433615843, 0.000452518463, 0.000453579426, 0.000123639901, -8.5530877e-5];\n      this.formattedCv = [];\n      for (let i = 0; i < this.voltageList.length; i++) {\n        this.formattedCv.push({\n          x: this.voltageList[i],\n          y: this.currentList[i]\n        });\n      }\n      return this.formattedCv;\n    },\n    formatCV2() {\n      console.log(\"In formatter\");\n      this.voltageList = [0.1862, 0.5785, 0.9715, 1.3647, 1.6417, 1.3174, 0.7387, 0.2595, -0.1395, -0.5328, -0.926, -1.5053, -1.9754, -1.8442, -1.4438, -0.7846, -0.3838, 0.0097, 0.4035, 1.0693, 1.4628, 1.7809, 1.4821, 1.0886, 0.4225, 0.0289, -0.3645, -0.7582, -1.2518, -1.818, -1.9908, -1.6102, -1.0373, -0.5513, -0.1582, 0.2353, 0.8144, 1.2933, 1.6929, 1.6528, 1.2592, 0.6795, 0.2, -0.1936, -0.5941, -0.9874, -1.653, -2.0005, -1.7823, -1.2958, -0.7235, -0.3299, 0.0704, 0.5497, 1.1287, 1.5221, 1.7653, 1.43, 0.9364];\n      this.currentList = [7.8413963e-5, 8.9511474e-5, 0.000146903872, 0.000261963646, 0.000318518003, 8.4209442e-5, -0.000101245801, -0.00014692386, -0.000165091594, -0.000199155251, -0.000267699877, -0.000369997342, -0.000453988711, -0.000217012564, 8.356571e-6, 0.000116434137, 0.000159986377, 0.000202106913, 0.000250808199, 0.000253478686, 0.000347145398, 0.000470825036, 0.000200970968, -1.9729137e-5, -0.00014132599, -0.000164469322, -0.000190092961, -0.000233205954, -0.000308367372, -0.00036974748, -0.000316727161, -4.2108695e-5, 9.2377782e-5, 0.000146250208, 0.00018860666, 0.000234808366, 0.000251668493, 0.000295611223, 0.000438825289, 0.000336194038, 5.7689349e-5, -0.000108474056, -0.000157765667, -0.000179123918, -0.000212482254, -0.000274241408, -0.000345591704, -0.000379351775, -0.000134984652, 5.2632531e-5, 0.000131592711, 0.000171313365, 0.000213677168, 0.000253056407, 0.000267223517, 0.00036415259, 0.000444765886, 0.000162816048, -5.7469209e-5];\n      this.formattedCv = [];\n      for (let i = 0; i < this.voltageList.length; i++) {\n        this.formattedCv.push({\n          x: this.voltageList[i],\n          y: this.currentList[i]\n        });\n      }\n      return this.formattedCv;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","datePicked","formattedCv","currentList","voltageList","selected","activeDevices","cvReading","chartOptions","stroke","curve","width","chart","id","xaxis","tickAmount","series","name","formatCV","formatCV2","mounted","lookUpUrlActiveDevices","lookUpHeadersActiveDevices","headers","lookUpRequestActiveDevices","RequestType","DataDict","DeviceID","ReadingDate","console","log","post","then","response","text","value","i","Values","length","push","methods","loadCVReadings","device","lookUpUrlCVReadings","lookUpHeadersCVReadings","lookUpRequestCVReadings","x","y"],"sources":["src/components/MainComponent.vue"],"sourcesContent":["<template>\n  <b-container fluid>\n    <br />\n    <b-card>\n      <b-row>\n        <b-col>1</b-col>\n        <b-col class=\"text-center\">\n          <b-form-select\n            class=\"deviceselector\"\n            v-model=\"selected\"\n            :options=\"activeDevices\"\n          ></b-form-select\n        ></b-col>\n        <b-col>3</b-col>\n      </b-row>\n      <br />\n      <b-row>\n        <b-col>1</b-col>\n        <b-col class=\"text-center\"\n          ><b-form-datepicker\n            class=\"deviceselector\"\n            v-model=\"datePicked\"\n            locale=\"en\"\n          ></b-form-datepicker\n        ></b-col>\n        <b-col>3</b-col>\n      </b-row>\n    </b-card>\n    <b-card class=\"selection\">\n      <b-row>\n        <b-col cols=\"2\"> </b-col>\n        <b-col cols=\"8\" class=\"main\">\n          <h5>Select Device ID:</h5>\n          <b-form-select\n            v-model=\"selected\"\n            :options=\"activeDevices\"\n            class=\"dropdown\"\n          ></b-form-select>\n        </b-col>\n        <b-col cols=\"2\"> </b-col>\n        <hr />\n      </b-row>\n      <b-row>\n        <b-col cols=\"2\"> </b-col>\n        <b-col cols=\"8\" class=\"text-center\">\n          <b-form-datepicker\n            v-model=\"datePicked\"\n            class=\"datePicker\"\n            locale=\"en\"\n          ></b-form-datepicker>\n          <p>Date: {{ datePicked }}</p>\n        </b-col>\n        <b-col cols=\"2\"> </b-col>\n      </b-row>\n      <b-button v-on:click=\"loadCVReadings(selected)\"> View Readings </b-button>\n    </b-card>\n\n    <br />\n    <b-row>\n      <b-col cols=\"2\"> </b-col>\n      <b-col cols=\"4\" class=\"main\">\n        <b-card>\n          <ApexChart\n            width=\"100%\"\n            type=\"line\"\n            :options=\"chartOptions\"\n            :series=\"series\"\n          ></ApexChart>\n        </b-card>\n      </b-col>\n      <b-col cols=\"4\" class=\"main\">\n        <b-card>\n          <ApexChart\n            width=\"100%\"\n            type=\"line\"\n            :options=\"chartOptions\"\n            :series=\"series\"\n          ></ApexChart>\n        </b-card>\n      </b-col>\n      <b-col cols=\"2\"> </b-col>\n    </b-row>\n  </b-container>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  data() {\n    return {\n      datePicked: \"\",\n      formattedCv: [],\n      currentList: [],\n      voltageList: [],\n      selected: \"Placeholder\",\n      activeDevices: [],\n      cvReading: [],\n      chartOptions: {\n        stroke: {\n          curve: \"smooth\",\n          width: \"1\",\n        },\n        chart: {\n          id: \"vuechart-example\",\n        },\n        xaxis: {\n          tickAmount: 7,\n        },\n      },\n      series: [\n        {\n          name: \"cv-data\",\n          data: this.formatCV(),\n        },\n        {\n          name: \"cv-data2\",\n          data: this.formatCV2(),\n        },\n      ],\n    };\n  },\n  mounted() {\n    let lookUpUrlActiveDevices =\n      \"https://z4gvpjhmk4.execute-api.eu-west-2.amazonaws.com/DEV/visualiser\";\n    let lookUpHeadersActiveDevices = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-api-key\": \"WEqEfodYfW3cSpQ99TGlD3pJFCbB0KAG6byvLEpm\",\n      },\n    };\n    let lookUpRequestActiveDevices = {\n      RequestType: \"ActiveDevices\",\n      DataDict: [\n        {\n          DeviceID: \"\",\n          ReadingDate: \"\",\n        },\n      ],\n    };\n    console.log(lookUpRequestActiveDevices);\n    axios\n      .post(\n        lookUpUrlActiveDevices,\n        lookUpRequestActiveDevices,\n        lookUpHeadersActiveDevices\n      )\n      .then((response) => {\n        this.activeDevices = [\n          { text: \"Please select a Device ID\", value: \"Placeholder\" },\n        ];\n        console.log(response);\n        for (let i = 0; i < response.data.Values.length; i++) {\n          this.activeDevices.push({\n            text: response.data.Values[i],\n            value: response.data.Values[i],\n          });\n        }\n      });\n  },\n  methods: {\n    loadCVReadings(device) {\n      let lookUpUrlCVReadings =\n        \"https://z4gvpjhmk4.execute-api.eu-west-2.amazonaws.com/DEV/visualiser\";\n      let lookUpHeadersCVReadings = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"x-api-key\": \"WEqEfodYfW3cSpQ99TGlD3pJFCbB0KAG6byvLEpm\",\n        },\n      };\n      let lookUpRequestCVReadings = {\n        RequestType: \"LoadCVReadings\",\n        DataDict: [\n          {\n            DeviceID: device,\n            ReadingDate: \"2023-04-18\",\n          },\n        ],\n      };\n      console.log(lookUpRequestCVReadings);\n      axios\n        .post(\n          lookUpUrlCVReadings,\n          lookUpRequestCVReadings,\n          lookUpHeadersCVReadings\n        )\n        .then((response) => {\n          console.log(response);\n          this.cvReading = response.data.Values;\n        });\n    },\n    formatCV() {\n      console.log(\"In formatter\");\n      this.voltageList = [\n        0.186, 0.5784, 0.9713, 1.457, 1.7114, 1.3184, 0.74, 0.261, -0.139,\n        -0.7039, -1.1968, -1.5897, -1.9749, -1.8464, -1.447, -0.8821, -0.3897,\n        0.1753, 0.6683, 1.062, 1.4552, 1.7784, 1.4902, 1.0107, 0.4312, 0.0383,\n        -0.4413, -1.0207, -1.4139, -1.8074, -1.9944, -1.6222, -1.1433, -0.5641,\n        -0.1707, 0.4935, 0.8866, 1.2801, 1.6804, 1.6655, 1.2722, 0.6062, 0.2127,\n        -0.1808, -0.846, -1.2397, -1.6393, -1.9957, -1.7968, -1.4032, -0.7384,\n        -0.3449, 0.2343, 0.7138, 1.1143, 1.5077, 1.7701, 1.4446, 0.951,\n      ];\n      this.currentList = [\n        0.000132378141, 0.000181730747, 0.000226203124, 0.000342571576,\n        0.000339571635, 3.1642119e-5, -0.000128792802, -0.000184283654,\n        -0.000241221627, -0.000305883209, -0.00036611557, -0.000450539589,\n        -0.000576182206, -0.000357826551, -6.2791506e-5, 0.000132739266,\n        0.000232501348, 0.000335686843, 0.000422143936, 0.000430436929,\n        0.000440641244, 0.000483373801, 0.000157042344, -6.7921917e-5,\n        -0.000169610381, -0.000218316118, -0.000284244657, -0.000342094898,\n        -0.000396029154, -0.00048948129, -0.000483620167, -0.000154491266,\n        6.6577156e-5, 0.000206048091, 0.000269123872, 0.00039712588,\n        0.000432213147, 0.000432670116, 0.000488873323, 0.000315097968,\n        1.9403299e-5, -0.000148762703, -0.000194740136, -0.00025053672,\n        -0.000326573849, -0.00036756595, -0.000442560514, -0.000534200668,\n        -0.000279621283, -2.2435188e-5, 0.000175065637, 0.000241377036,\n        0.000346403678, 0.000419243177, 0.000433615843, 0.000452518463,\n        0.000453579426, 0.000123639901, -8.5530877e-5,\n      ];\n      this.formattedCv = [];\n      for (let i = 0; i < this.voltageList.length; i++) {\n        this.formattedCv.push({\n          x: this.voltageList[i],\n          y: this.currentList[i],\n        });\n      }\n      return this.formattedCv;\n    },\n    formatCV2() {\n      console.log(\"In formatter\");\n      this.voltageList = [\n        0.1862, 0.5785, 0.9715, 1.3647, 1.6417, 1.3174, 0.7387, 0.2595, -0.1395,\n        -0.5328, -0.926, -1.5053, -1.9754, -1.8442, -1.4438, -0.7846, -0.3838,\n        0.0097, 0.4035, 1.0693, 1.4628, 1.7809, 1.4821, 1.0886, 0.4225, 0.0289,\n        -0.3645, -0.7582, -1.2518, -1.818, -1.9908, -1.6102, -1.0373, -0.5513,\n        -0.1582, 0.2353, 0.8144, 1.2933, 1.6929, 1.6528, 1.2592, 0.6795, 0.2,\n        -0.1936, -0.5941, -0.9874, -1.653, -2.0005, -1.7823, -1.2958, -0.7235,\n        -0.3299, 0.0704, 0.5497, 1.1287, 1.5221, 1.7653, 1.43, 0.9364,\n      ];\n      this.currentList = [\n        7.8413963e-5, 8.9511474e-5, 0.000146903872, 0.000261963646,\n        0.000318518003, 8.4209442e-5, -0.000101245801, -0.00014692386,\n        -0.000165091594, -0.000199155251, -0.000267699877, -0.000369997342,\n        -0.000453988711, -0.000217012564, 8.356571e-6, 0.000116434137,\n        0.000159986377, 0.000202106913, 0.000250808199, 0.000253478686,\n        0.000347145398, 0.000470825036, 0.000200970968, -1.9729137e-5,\n        -0.00014132599, -0.000164469322, -0.000190092961, -0.000233205954,\n        -0.000308367372, -0.00036974748, -0.000316727161, -4.2108695e-5,\n        9.2377782e-5, 0.000146250208, 0.00018860666, 0.000234808366,\n        0.000251668493, 0.000295611223, 0.000438825289, 0.000336194038,\n        5.7689349e-5, -0.000108474056, -0.000157765667, -0.000179123918,\n        -0.000212482254, -0.000274241408, -0.000345591704, -0.000379351775,\n        -0.000134984652, 5.2632531e-5, 0.000131592711, 0.000171313365,\n        0.000213677168, 0.000253056407, 0.000267223517, 0.00036415259,\n        0.000444765886, 0.000162816048, -5.7469209e-5,\n      ];\n      this.formattedCv = [];\n      for (let i = 0; i < this.voltageList.length; i++) {\n        this.formattedCv.push({\n          x: this.voltageList[i],\n          y: this.currentList[i],\n        });\n      }\n      return this.formattedCv;\n    },\n  },\n};\n</script>\n\n<style></style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}